[package]
name = "rstsr-core"
version.workspace = true
edition.workspace = true
description.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true
readme = "readme.md"

[dependencies]
rstsr-common = { workspace = true }
rstsr-dtype-traits = { workspace = true, features = ["half"] }
rstsr-native-impl = { workspace = true }
num = { workspace = true }
itertools = { workspace = true }
half = { workspace = true }
rayon = { workspace = true, optional = true }
faer = { workspace = true, optional = true }
faer-ext = { workspace = true, optional = true }
derive_builder = { workspace = true }
duplicate = { workspace = true }

[dev-dependencies]
rand = { workspace = true }
itertools = { workspace = true }
approx = { workspace = true }
ndarray = { workspace = true }
criterion = { workspace = true }
cpu-time = { workspace = true }

[features]
default = ["row_major", "aligned_alloc", "faer", "faer_as_default"]
std = ["rstsr-common/std"]
rayon = ["dep:rayon", "rstsr-common/rayon", "rstsr-native-impl/rayon"]
faer = ["rayon", "dep:faer", "dep:faer-ext"]
faer_as_default = []

# Row-major or Col-major will be contractidary features.
# Only one is accepted, otherwise this will panic in runtime.
# - Row-major convention: similar to NumPy (with same behavior of versatile broadcasting)
# - Col-major convention: similar to Julia (limited broadcasting)
row_major = ["rstsr-common/row_major"]
col_major = ["rstsr-common/col_major"]

# Use aligned allocation in some cases (64-byte alignment for vector larger than 128 elements).
# If this feature not specified, for CPU it will use default allocator of `Vec<T>`.
# This feature is not intended for pinned-memory allocation (to memory pages), only for (possible) SIMD and cache line.
aligned_alloc = ["rstsr-common/aligned_alloc"]

# Dispatch dimensinoality in layout iterators
# This option is recommended for efficiency for large tensor, especially with non-contiguous strides.
# However, this feature will add runtime overhead for small tensor.
# And more importantly, this feature will hugely increase compile time.
dispatch_dim_layout_iter = ["rstsr-common/dispatch_dim_layout_iter"]

[[bench]]
name = "main"
harness = false
